name: Provision EKS Infrastructure

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Export Terraform outputs
        id: export
        run: |
          echo "AWS_REGION=$(terraform output -raw aws_region)" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$(terraform output -raw cluster_name)" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=$(terraform output -raw ecr_repository_name)" >> $GITHUB_ENV
          echo "OIDC_ROLE_ARN=$(terraform output -raw github_oidc_role_arn)" >> $GITHUB_ENV

      - name: Set outputs as GitHub Secrets
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh auth login --with-token <<< "$GH_TOKEN"
          for var in AWS_REGION CLUSTER_NAME ECR_REPOSITORY OIDC_ROLE_ARN; do
            gh secret set $var -b"$(printenv $var)" -R ${{ github.repository }}
          done

      - name: Trigger deploy workflow
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yml/dispatches \
            -d '{"ref":"main"}'
